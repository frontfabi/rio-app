{"version":3,"sources":["history.js","pages/Home.jsx","components/Modal.jsx","utils/service.js","components/Flexbox.jsx","components/Button.jsx","components/popups/Signup.jsx","components/Header.jsx","components/InputText.jsx","pages/Login/style.js","pages/Login/Login.jsx","components/If.jsx","components/Textarea.jsx","components/Checkboxes.jsx","components/Radios.jsx","components/Select.jsx","pages/Signup/dicioFields.js","pages/Signup/styles.js","pages/Signup/Enterprise.jsx","pages/Signup/Professionals.jsx","components/Footer.jsx","App.js","models/example.js","utils/setAuthToken.js","models/index.js","models/auth.js","models/register.js","store.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Home","ModalStyled","styled","div","props","isOpen","ModalContentStyled","width","CloseButtonStyled","Modal","children","onClose","onClick","defaultProps","opened","px","value","defaultValue","newValue","css","isEmpty","undefined","Object","keys","length","trim","parseText","input","toLowerCase","split","join","normalize","replace","Flexbox","className","horizontal","vertical","center","end","justify","align","margin","top","bottom","left","right","padding","PropTypes","shape","oneOfType","string","number","displayName","StyledButton","button","minWidth","Button","type","disabled","styles","node","bool","style","VerticalLine","SignupPopup","to","Header","useState","modalStatus","setModalStatus","role","aria-label","href","src","height","alt","aria-expanded","data-target","aria-hidden","id","Signup","InputText","label","name","placeholder","icon","help","error","register","ref","Form","form","InputWrapper","Login","useForm","handleSubmit","errors","clearError","onSubmit","data","console","log","email","isEdit","required","pattern","message","password","minLength","If","condition","Textarea","rows","Wrapper","Label","Checkbox","Checkboxes","fields","map","item","checkedItem","key","uuid","parse","StyledRadio","Input","Radios","Select","firstValue","isLoading","onChange","segment","actions","functions","color","gender","identitySegments","registryTypes","formations","sexualOrientation","Enterprise","defaultValues","companyLinks","companyPresentation","tel","responsibleName","city","companyName","getValues","watch","identityYes","hasState","setLoader","values","e","preventDefault","state","setTimeout","states","cities","filter","toString","filteredCities","identityContent","maxLength","Professionals","confirmPassword","birthday","pcd","homeState","currentState","currentCity","selfDeclaration","address","education","formationInstitution","cnpj","cnpjType","expertiseAreas","apanAssociate","phone","bio","links","registerUser","setValue","useStoreActions","user","registerProfessional","hasRegistry","useEffect","validate","companyRegistry","companyRegistryType","apan","FooterContent","StyledFooter","footer","fixed","Footer","func","AppWrapper","AppBody","App","store","history","path","exact","component","productsModel","items","1","price","setAuthToken","token","axios","defaults","headers","common","example","authModel","authUser","thunk","payload","a","async","query","post","res","setAuth","localStorage","setItem","decoded","jwtDecode","isAuthenticated","push","removeItem","response","setErrors","auth","recovery","msg","action","setRecovery","registerModel","setUser","then","defaultLocation","catch","err","storeModel","products","GlobalModels","createStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gi6RACeA,gBCOAC,EANF,WACX,OACE,uC,q+BCAJ,IAAMC,EAAcC,IAAOC,IAAV,KACJ,SAAAC,GAAK,OAAKA,EAAMC,OAAkB,QAAT,UAYhCC,EAAqBJ,IAAOC,IAAV,KAKb,SAAAC,GAAK,gBAAOA,EAAMG,UAIvBC,EAAoBN,IAAOC,IAAV,KAejBM,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUL,EAAb,EAAaA,OAAQM,EAArB,EAAqBA,QAASJ,EAA9B,EAA8BA,MAA9B,OACZ,kBAACN,EAAD,CAAaI,OAAQA,GACnB,kBAACC,EAAD,CAAoBC,MAAOA,GACzB,kBAACC,EAAD,CAAmBI,QAASD,GAA5B,QACCD,KAcPD,EAAMI,aAAe,CACnBC,QAAQ,EACRP,MAAO,IAIME,Q,wFC/DR,IAAMM,EAAK,SAACC,EAAOC,GACxB,GAAID,GAA0B,kBAAVA,EAClB,OAAOA,EAGT,IAAME,EAAQ,UAAMF,GAASC,GAAgB,EAA/B,MACd,OAAOE,YAAP,IAAaD,IAOFE,EAAU,SAACJ,GACtB,YAAiBK,IAAVL,GACG,OAAVA,GACkB,kBAAVA,GAAoD,IAA9BM,OAAOC,KAAKP,GAAOQ,QAC/B,kBAAVR,GAA8C,IAAxBA,EAAMS,OAAOD,QAGhCE,EAAY,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,MAAM,KAAKC,KAAK,KAAKC,UAAU,OAAOC,QAAQ,mBAAoB,K,kNCjBxH,IAAMC,EAAU/B,aAAO,YAA8B,IAA3BQ,EAA0B,EAA1BA,SAAUwB,EAAgB,EAAhBA,UAClC,OACE,yBAAKA,UAAWA,GACbxB,KAHSR,CAAH,KAST,SAAAE,GAAK,OAAIA,EAAM+B,YAAN,oCAGT,SAAA/B,GAAK,OAAIA,EAAMgC,UAAN,uCAIT,SAAAhC,GAAK,OAAIA,EAAMiC,QAAN,qFAMT,SAAAjC,GAAK,OAAIA,EAAMkC,KAAN,iEAKT,SAAAlC,GAAK,OAAIA,EAAMmC,SAAN,iCACUnC,EAAMmC,QADhB,YAIT,SAAAnC,GAAK,OAAIA,EAAMoC,OAAN,6BACMpC,EAAMoC,MADZ,YAIT,SAAApC,GAAK,OAAIA,EAAMG,OAAN,uBACAH,EAAMG,MADN,YAIT,SAAAH,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOC,KAA7B,sBAAmD3B,EAAGX,EAAMqC,OAAOC,KAAnE,QACT,SAAAtC,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOE,QAA7B,yBAAyD5B,EAAGX,EAAMqC,OAAOE,QAAzE,QACT,SAAAvC,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOG,MAA7B,uBAAqD7B,EAAGX,EAAMqC,OAAOG,MAArE,QACT,SAAAxC,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOI,OAA7B,wBAAuD9B,EAAGX,EAAMqC,OAAOI,OAAvE,QAET,SAAAzC,GAAK,OAAIA,EAAM0C,SAAW1C,EAAM0C,QAAQJ,KAA/B,uBAAsD3B,EAAGX,EAAM0C,QAAQJ,KAAvE,QACT,SAAAtC,GAAK,OAAIA,EAAM0C,SAAW1C,EAAM0C,QAAQH,QAA/B,0BAA4D5B,EAAGX,EAAM0C,QAAQH,QAA7E,QACT,SAAAvC,GAAK,OAAIA,EAAM0C,SAAW1C,EAAM0C,QAAQF,MAA/B,wBAAwD7B,EAAGX,EAAM0C,QAAQF,MAAzE,QACT,SAAAxC,GAAK,OAAIA,EAAM0C,SAAW1C,EAAM0C,QAAQD,OAA/B,yBAA0D9B,EAAGX,EAAM0C,QAAQD,OAA3E,QAIgCE,IAArCC,MAAqCD,IAA9BE,UAA8BF,IAAnBG,OAAmBH,IAAXI,OA0BlClB,EAAQpB,aAAe,CACrB4B,OAAQ,GACRK,QAAS,IAGXb,EAAQmB,YAAc,UAEPnB,Q,0GCrFf,IAAMoB,EAAenD,IAAOoD,OAAV,KACd,SAAAlD,GAAK,2BAAkBA,EAAMmD,UAAY,QAApC,QACL,SAAAnD,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOC,KAA7B,sBAAmDtC,EAAMqC,OAAOC,IAAhE,QACT,SAAAtC,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOE,QAA7B,yBAAyDvC,EAAMqC,OAAOE,OAAtE,QACT,SAAAvC,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOG,MAA7B,uBAAqDxC,EAAMqC,OAAOG,KAAlE,QACT,SAAAxC,GAAK,OAAIA,EAAMqC,QAAUrC,EAAMqC,OAAOI,OAA7B,wBAAuDzC,EAAMqC,OAAOI,MAApE,QAGPW,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAM7C,EAAT,EAASA,QAASF,EAAlB,EAAkBA,SAAUgD,EAA5B,EAA4BA,SAAUC,EAAtC,EAAsCA,OAAtC,OACb,kBAACN,EAAD,CACEnB,UAAS,iBAAYyB,GACrBD,SAAUA,EACVD,KAAMA,EACN7C,QAASA,GAERF,IAIU8C,IAE0CT,IAAjDa,KAAiDb,IAA3Cc,KAA2Cd,IAArCG,OAAqCH,IAA7BC,MAA6BD,IAAtBE,UAAsBF,IAAXI,O,oIAoB9CK,EAAO3C,aAAe,CACpB4C,KAAM,SACNC,UAAU,EACVI,MAAO,8BACPrB,OAAQ,CACNC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,IC9CX,IAAMkB,EAAe7D,IAAOC,IAAV,KA6CH6D,EAxCK,SAAC,GAAD,IAAGpD,EAAH,EAAGA,QAAH,OAClB,kBAAC,WAAD,KACE,kBAAC,EAAD,CACEL,MAAM,OACN8B,QAAM,EACNI,OAAQ,CACNC,IAAK,GACLC,OAAQ,GACRC,KAAM,EACNC,MAAO,IAGT,wBAAIX,UAAU,cAAd,6CAIF,kBAAC,EAAD,CACEK,QAAQ,eACRhC,MAAM,OACNiC,MAAM,UAEN,kBAAC,IAAD,CAAMyB,GAAG,qBAAqBrD,QAASA,GACrC,kBAAC,EAAD,CACE+C,OAAO,WADT,YAMF,kBAACI,EAAD,MACA,kBAAC,IAAD,CAAME,GAAG,yBAAyBrD,QAASA,GACzC,kBAAC,EAAD,CACE+C,OAAO,aADT,oBCkGOO,EAlIA,WAAM,MA8BmBC,oBAAS,GA9B5B,mBA8BZC,EA9BY,KA8BCC,EA9BD,KAgCnB,OACE,yBACEnC,UAAU,SACVoC,KAAK,aACLC,aAAW,mBAEX,yBAAKrC,UAAU,gBACb,uBAAGA,UAAU,cAAcsC,KAAK,oBAC9B,yBACEC,IAAI,yCACJlE,MAAM,MACNmE,OAAO,KACPC,IAAI,cAGR,4BACElB,KAAK,SACLvB,UAAU,uBACVqC,aAAW,OACXK,gBAAc,QACdC,cAAY,sBAEZ,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAGtB,yBAAKC,GAAG,qBAAqB7C,UAAU,eACrC,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAS+B,GAAG,IAAI/B,UAAU,eAA1B,QAGA,4BAAQA,UAAU,eAAlB,iBAGA,yBAAKA,UAAU,yCACb,4BAAQA,UAAU,eAAlB,QAGA,yBAAKA,UAAU,mBACb,4BAAQA,UAAU,eAAlB,SAGA,4BAAQA,UAAU,eAAlB,QAGA,4BAAQA,UAAU,eAAlB,WAGA,wBAAIA,UAAU,mBACd,4BAAQA,UAAU,eAAlB,sBAMN,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CACEtB,QAAS,kBAAMyD,GAAgBD,IAC/BT,OAAO,cAFT,eAMA,kBAAC,IAAD,CAASM,GAAG,UAAU/B,UAAU,mBAAhC,cAOR,kBAAC,EAAD,CACE7B,OAAQ+D,EACRzD,QAAS,kBAAM0D,GAAe,IAC9B9D,MAAM,SAEN,kBAACyE,EAAD,CACEpE,QAAS,kBAAMyD,GAAe,S,QCrHlCY,EAAY,SAAC,GAUV,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,KACA1B,EAMI,EANJA,KACA2B,EAKI,EALJA,YACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEF,OACE,yBAAKtD,UAAU,SACb,2BAAOA,UAAU,SAASgD,GACxB,yBACEhD,UAAS,kBAAamD,EAAO,iBAAmB,GAAvC,YAA6CE,EAAQ,kBAAoB,KAElF,2BACErD,UAAS,gBAAWqD,EAAQ,YAAc,IAC1C9B,KAAMA,EACN2B,YAAaA,EACbD,KAAMA,EACNM,IAAKD,IAENH,GACC,0BACEnD,UAAU,wBACV4B,MAAO,CAAE,OAAU,WAEnB,uBAAG5B,UAAS,cAASmD,MAGxBE,GACC,0BAAMrD,UAAU,0BACd,uBAAGA,UAAU,kCAIlBoD,GAAQ,uBAAGpD,UAAU,QAAQoD,GAC7BC,GACC,uBAAGrD,UAAU,kBACVqD,KA8BbN,EAAUpE,aAAe,CACvB4C,KAAM,OACN6B,UAAMjE,EACNkE,WAAOlE,GAGM4D,Q,kYC9EU/E,IAAOC,IAAV,KAAf,IAKMuF,EAAOxF,IAAOyF,KAAV,KASJC,EAAe1F,IAAOC,IAAV,KC0FV0F,EA5FD,WAAO,IAAD,EAEoB1B,oBAAS,GAF7B,mBAEXC,EAFW,KAEEC,EAFF,OAGqCyB,cAA/CN,EAHU,EAGVA,SAAUO,EAHA,EAGAA,aAAcC,EAHd,EAGcA,OAAQC,EAHtB,EAGsBA,WASxC,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAS5D,QAAM,GACb,kBAACqD,EAAD,CAAMQ,SAAUH,GAVL,SAAAI,GAAUC,QAAQC,IAAIF,OAW/B,kBAAC,EAAD,CACE9D,QAAM,EACN9B,MAAM,OACNkC,OAAQ,CACNC,IAAK,GACLC,OAAQ,GACRC,KAAM,EACNC,MAAO,IAGT,wBAAIX,UAAU,yBAAd,iBAEF,kBAAC0D,EAAD,KACE,kBAAC,EAAD,CACEV,MAAM,SACNzB,KAAK,OACL0B,KAAK,QACLC,YAAY,SACZC,KAAK,cACLE,MAAOS,GAAUA,EAAOM,MACxBC,QAAQ,EACRf,SAAUA,EAAS,CACjBgB,SAAU,iCACVC,QAAS,CACPzF,MP1ChB,wIO2CgB0F,QAAS,iDAIf,kBAAC,EAAD,CACExB,MAAM,QACNzB,KAAK,WACL0B,KAAK,WACLC,YAAY,QACZC,KAAK,UACLE,MAAOS,GAAUA,EAAOW,SACxBJ,QAAQ,EACRf,SAAUA,EAAS,CACjBgB,SAAU,iCACVI,UAAW,CACT5F,MAAO,GACP0F,QAAS,mDAIf,kBAAC,IAAD,CACEzC,GAAG,iBACH/B,UAAU,iBAFZ,wBAOF,kBAAC,EAAD,CAASK,QAAQ,eAAeL,UAAU,WACxC,kBAAC,EAAD,CACEtB,QA/DQ,WAElB,OADAqF,IACO5B,GAAgBD,IA8DbT,OAAO,qBAFT,eAMA,kBAAC,EAAD,CAAQF,KAAK,SAASE,OAAO,wBAA7B,aAMN,kBAAC,EAAD,CACEtD,OAAQ+D,EACRzD,QAAS,kBAAM0D,GAAe,IAC9B9D,MAAM,SAEN,kBAACyE,EAAD,SCpGK6B,EAAK,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWpG,EAAd,EAAcA,SAAd,QAA8BoG,GAAYpG,GCGtDqG,EAAW,SAAC,GAAyD,IAAvD3B,EAAsD,EAAtDA,YAAaF,EAAyC,EAAzCA,MAAO8B,EAAkC,EAAlCA,KAAMxB,EAA4B,EAA5BA,SAAUD,EAAkB,EAAlBA,MAAOJ,EAAW,EAAXA,KAC7D,OACE,yBAAKjD,UAAU,SACb,2BAAOA,UAAU,SAASgD,GAC1B,yBAAKhD,UAAS,kBAAaqD,EAAQ,kBAAoB,KACrD,8BACErD,UAAS,mBAAcqD,EAAQ,YAAc,IAC7CH,YAAaA,EACb4B,KAAMA,EACNvB,IAAKD,EACLL,KAAMA,IAGPI,GACC,0BAAMrD,UAAU,0BACd,uBAAGA,UAAU,iCAGhBqD,GACC,uBAAGrD,UAAU,kBACVqD,MAiBbwB,EAASlG,aAAe,CACtBmG,KAAM,GAGOD,Q,mhBCtCf,IAEME,GAAU/G,IAAOC,IAAV,KAFE,SAYT+G,GAAQhH,IAAOgF,MAAV,KAZI,SAmBTiC,GAAWjH,IAAOyB,MAAV,MAgCCyF,GA5BI,SAAC,GAAD,IAAGlC,EAAH,EAAGA,MAAOM,EAAV,EAAUA,SAAUL,EAApB,EAAoBA,KAAMkC,EAA1B,EAA0BA,OAA1B,OACjB,yBAAKnF,UAAU,SACb,2BAAOA,UAAU,SAASgD,GAC1B,kBAAC+B,GAAD,KACGI,EAAOC,KAAI,SAAAC,GACV,IAAMC,EAA8B,kBAATD,EAAoBA,EAAKpC,KAAOoC,EAC3D,OACE,kBAACL,GAAD,CAAOO,IAAKC,OAAQxF,UAAU,oBAC5B,kBAACiF,GAAD,CACE1D,KAAK,WACL0B,KAAI,UAAKA,EAAL,YAAawC,EAAMH,GAAnB,KACJ/B,IAAKD,IAEP,8BAAOgC,U,8SCrCnB,IAAMI,GAAc1H,IAAOgF,MAAV,MAIX2C,GAAQ3H,IAAOyB,MAAV,MAILsF,GAAU/G,IAAOC,IAAV,MA4BE2H,GAxBA,SAAC,GAAD,IAAGtC,EAAH,EAAGA,SAAUL,EAAb,EAAaA,KAAMD,EAAnB,EAAmBA,MAAOmC,EAA1B,EAA0BA,OAAQ9B,EAAlC,EAAkCA,MAAlC,OACb,yBAAKrD,UAAU,SACb,2BAAOA,UAAU,SAASgD,GAC1B,kBAAC,GAAD,KACGmC,EAAOC,KAAI,SAAAC,GAAI,OACd,kBAACK,GAAD,CAAa1F,UAAU,QAAQuF,IAAKC,QAClC,kBAACG,GAAD,CACEpE,KAAK,QACL0B,KAAI,UAAKA,EAAL,YAAawC,EAAMJ,GAAnB,KACJ9B,IAAKD,EACLtD,UAAS,UAAKqD,EAAQ,YAAc,MAEtC,8BAAOgC,QAIZhC,GACC,uBAAGrD,UAAU,kBACVqD,KCEMwC,GAlCA,SAAC,GAAD,IAEX7C,EAFW,EAEXA,MACAK,EAHW,EAGXA,MACAJ,EAJW,EAIXA,KACA6C,EALW,EAKXA,WACAtH,EANW,EAMXA,SACA8E,EAPW,EAOXA,SAPW,IAQXyC,iBARW,SASXC,EATW,EASXA,SATW,OAWX,yBAAKhG,UAAU,SACb,2BAAOA,UAAU,SAASgD,GACxB,yBAAKhD,UAAU,WACb,yBAAKA,UAAS,iBAAYqD,EAAQ,uBAAyB,GAA7C,YAAmD0C,EAAY,aAAe,KAC1F,4BAAQ9C,KAAMA,EAAMM,IAAKD,EAAU0C,SAAUA,GAC3C,4BAAQlH,MAAM,IAAIgH,GACjBtH,IAGJ6E,GAAS,uBAAGrD,UAAU,kBAAkBqD,M,kBCvBtC4C,GAAU,CAAC,gCAA8B,2BAAyB,+BAA6B,2BAAyB,8BAA4B,8BAA4B,UAEhLC,GAAU,CAAC,YAAa,SAAU,cAAe,eAAa,QAAS,WAAY,UAEnFC,GAAY,CAAC,6BAA2B,aAAc,0BAA2B,iBAAkB,wBAAyB,aAAc,+BAA0B,+BAA0B,WAAS,YAAa,8BAAyB,eAAgB,cAAe,wBAAyB,0BAA2B,qBAAsB,sBAAuB,kBAAgB,yBAA0B,cAAe,oBAAqB,qCAAsC,yBAAuB,8BAA4B,gCAA8B,8BAA4B,2BAA4B,2BAAyB,0BAAwB,8CAA4C,eAAgB,QAAS,8BAA+B,uBAAqB,oBAAqB,YAAa,6BAAwB,yCAAiC,sCAA8B,mCAAoC,iCAAkC,oBAAqB,wBAAmB,mBAAoB,aAAc,wBAAyB,wBAAyB,eAE/kCC,GAAQ,CAAC,QAAS,SAAU,WAAY,UAAW,UAEnDC,GAAS,CAAC,aAAc,eAAgB,YAAa,cAAe,QAAS,oBAAe,SAE5FC,GAAmB,CAAC,oBAAqB,0BAAwB,qBAAsB,wBAAyB,oBAAqB,wBAAyB,wEAA6D,SAE3NC,GAAgB,CAAC,MAAO,SAAU,KAAM,SAExCC,GAAa,CAAC,aAAc,oCAA+B,4BAAoB,6BAE/EC,GAAoB,CAAC,aAAW,MAAO,YAAa,aAAc,WAAY,gBAAiB,U,kLCdrFzI,IAAOC,IAAV,MAAb,IAGMuF,GAAOxF,IAAOyF,KAAV,MCwPFiD,GAnOI,WAAO,IAAD,EACsC9C,YAAQ,CACnE+C,cAAe,CACbC,aAAc,uCACdC,oBAAqB,uCACrBzC,MAAO,gBACP0C,IAAK,YACLC,gBAAiB,YACjBC,KAAM,YACNC,YAAa,YART3D,EADe,EACfA,SAAUO,EADK,EACLA,aAAcC,EADT,EACSA,OAAQoD,EADjB,EACiBA,UAAWC,EAD5B,EAC4BA,MAY7CC,EAAcD,EAAM,mBACpBE,EAAWF,EAAM,SAdA,EAmBQlF,oBAAS,GAnBjB,mBAmBhB8D,EAnBgB,KAmBLuB,EAnBK,KAoBvBpD,QAAQC,IAAI,CAAEL,SAAQyD,OAAQL,MAC9BhD,QAAQC,IAAIkD,GAOZ,OACE,kBAAC,EAAD,CAAShH,QAAQ,UACf,kBAAC,GAAD,CAAM2D,SAAUH,GAfH,SAACI,EAAMuD,GACtBA,EAAEC,iBACFvD,QAAQC,IAAIF,OAcR,kBAAC,GAAD,CACEjB,MAAM,SACNK,MAAOS,EAAO4D,OAAS5D,EAAO4D,MAAMlD,QACpCvB,KAAK,QACL6C,WAAW,SACXxC,SAAUA,EAAS,CACjBgB,SAAU,mCAEZ0B,SAhBiB,WACvBsB,GAAU,GACVK,YAAW,WAAQL,GAAU,KAAU,MAejCvB,WAAW,GAEV6B,GAAOxC,KAAI,SAAAC,GAAI,OACd,4BAAQvG,MAAOuG,EAAKxC,GAAI0C,IAAKF,EAAKxC,IAAKwC,EAAKpC,UAGhD,kBAAC0B,EAAD,CAAIC,UAA+B,qBAAbyC,GACpB,kBAAC,GAAD,CACErE,MAAM,SACNK,MAAOS,EAAOkD,MAAQlD,EAAOkD,KAAKxC,QAClCvB,KAAK,OACL6C,WAAW,SACXxC,SAAUA,EAAS,CACjBgB,SAAU,mCAEZyB,UAAWA,GAEV8B,GACEC,QAAO,SAAAd,GAAI,OAAIA,EAAI,SAAae,aAAeb,IAAYQ,SAC3DtC,KAAI,SAAA4C,GAAc,OACjB,4BACElJ,MAAOkJ,EAAe/E,KACtBsC,IAAKyC,EAAenF,IAEnBmF,EAAe/E,WAM1B,kBAAC,GAAD,CACED,MAAM,iDACNM,SAAUA,EACV6B,OAAQyC,GACR3E,KAAK,gBAEP,kBAAC,GAAD,CACED,MAAM,4BACNM,SAAUA,EACV6B,OAAQc,GACRhD,KAAK,YAEP,kBAAC,GAAD,CACED,MAAM,0BACNM,SAAUA,EACV6B,OAAQe,GACRjD,KAAK,iBAEP,kBAAC,GAAD,CACED,MAAM,oDACNM,SAAUA,EACV6B,OAAQgB,GACRlD,KAAK,qBAEP,kBAAC,GAAD,CACED,MAAM,8DACNM,SAAUA,EAAS,CACjBgB,SAAU,mCAEZrB,KAAK,QACLkC,OAAQiB,GACR/C,MAAOS,EAAOsC,OAAStC,EAAOsC,MAAM5B,UAEtC,kBAAC,GAAD,CACExB,MAAM,kDACNM,SAAUA,EAAS,CACjBgB,SAAU,mCAEZrB,KAAK,SACLkC,OAAQkB,GACRhD,MAAOS,EAAOuC,QAAUvC,EAAOuC,OAAO7B,UAExC,kBAAC,GAAD,CACExB,MAAM,gEACNM,SAAUA,EAAS,CACjBgB,SAAU,mCAEZrB,KAAK,kBACLkC,OAAQ,CAAC,MAAO,UAChB9B,MAAOS,EAAOmE,iBAAmBnE,EAAOmE,gBAAgBzD,UAE1D,kBAACG,EAAD,CAAIC,UAA2B,QAAhBwC,GACb,kBAAC,GAAD,CACEpE,MAAM,4BACNM,SAAUA,EAAS,CACjBgB,SAAU,mCAEZa,OAAQmB,GACRrD,KAAK,6BAGT,kBAAC,EAAD,CACEA,KAAK,QACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBgB,SAAU,iCACVC,QAAS,CACPzF,MfvJZ,wIewJY0F,QAAS,+CAGbxB,MAAM,wBACNE,YAAY,4CACZG,MAAOS,EAAOM,OAASN,EAAOM,MAAMI,UAEtC,kBAAC,EAAD,CACEvB,KAAK,cACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBgB,SAAU,mCAEZtB,MAAM,kBACNE,YAAY,2BACZG,MAAOS,EAAOmD,aAAenD,EAAOmD,YAAYzC,UAElD,kBAAC,EAAD,CACEvB,KAAK,MACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBgB,SAAU,iCACVC,QAAS,CACPzF,MAAO,aACP0F,QAAS,4BAEX0D,UAAW,CACTpJ,MAAO,GACP0F,QAAS,kCAGbxB,MAAM,mCACNE,YAAY,+BACZG,MAAOS,EAAOgD,KAAOhD,EAAOgD,IAAItC,UAElC,kBAAC,EAAD,CACEvB,KAAK,kBACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBgB,SAAU,mCAEZtB,MAAM,8CACNE,YAAY,yCACZG,MAAOS,EAAOiD,iBAAmBjD,EAAOiD,gBAAgBvC,UAE1D,kBAAC,EAAD,CACEvB,KAAK,OACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBgB,SAAU,mCAEZtB,MAAM,cACNE,YAAY,uBACZG,MAAOS,EAAOkD,MAAQlD,EAAOkD,KAAKxC,UAEpC,kBAAC,EAAD,CACExB,MAAM,gCACNE,YAAY,gCACZ4B,KAAM,EACNzB,MAAOS,EAAO+C,qBAAuB/C,EAAO+C,oBAAoBrC,QAChEvB,KAAK,sBACLK,SAAUA,EAAS,CACjBgB,SAAU,iCACVI,UAAW,CACT5F,MAAO,GACP0F,QAAS,uCAIf,kBAAC,EAAD,CACExB,MAAM,4CACNE,YAAY,oBACZ4B,KAAM,EACNzB,MAAOS,EAAO8C,cAAgB9C,EAAO8C,aAAapC,QAClDvB,KAAK,eACLK,SAAUA,EAAS,CACjBgB,SAAU,iCACVI,UAAW,CACT5F,MAAO,GACP0F,QAAS,iCAIf,kBAAC,EAAD,CAAQjD,KAAK,UAAb,aCoHO4G,GA9UO,WAAO,IAAD,EAQtBvE,YAAQ,CACV+C,cAAe,CACb1D,KAAM,UACNmB,MAAO,iBACPK,SAAU,SACV2D,gBAAiB,SACjBC,SAAS,YACThC,OAAQ,MACRiC,KAAK,EACLC,UAAW,MACXC,aAAa,MACbC,YAAa,MACbC,gBAAiB,MACjBC,QAAS,SACTC,UAAW,SACXC,qBAAsB,MACtBC,MAAM,EACNC,SAAU,MACVd,iBAAiB,EACjB3B,iBAAkB,GAClB0C,eAAgB,MAChBC,eAAe,EACfC,MAAO,WACPzC,kBAAmB,MACnB0C,IAAK,uBACLC,MAAO,oCA/BT9F,EAFwB,EAExBA,SACAO,EAHwB,EAGxBA,aACAC,EAJwB,EAIxBA,OACAoD,EALwB,EAKxBA,UACAC,EANwB,EAMxBA,MA+BIkC,GArCoB,EAOxBC,SA8BmBC,aAAgB,SAAArD,GAAO,OAAIA,EAAQsD,KAAKC,yBAOvDC,EAAcvC,EAAM,mBACpBC,EAAcD,EAAM,mBA7CA,EA+CKlF,oBAAS,GA/Cd,mBA+CnB8D,EA/CmB,KA+CRuB,EA/CQ,KAqD1BqC,qBAAU,WACRrG,EAAS,CAAEL,KAAM,eAChB,CAACK,IAIJ,OACE,kBAAC,EAAD,CAASjD,QAAQ,UACf,kBAAC,GAAD,CAAM2D,SAAUH,GAvBH,SAACI,EAAMuD,GACtBA,EAAEC,iBACFvD,QAAQC,IAAIF,GACZoF,EAAa,CAACpF,aAqBV,kBAAC,EAAD,CACEhB,KAAK,QACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBiB,QAAS,CACPzF,MhBpFZ,wIgBqFY0F,QAAS,+CAGbxB,MAAM,wBACNE,YAAY,4CACZG,MAAOS,EAAOM,OAASN,EAAOM,MAAMI,UAGtC,kBAAC,EAAD,CACEvB,KAAK,WACL1B,KAAK,WACL+B,SAAUA,EAAS,CACjBoB,UAAW,CACT5F,MAAO,EACP0F,QAAS,mDAGbxB,MAAM,QACNE,YAAY,mBACZG,MAAOS,EAAOW,UAAYX,EAAOW,SAASD,UAG5C,kBAAC,EAAD,CACEvB,KAAK,kBACL1B,KAAK,WACL+B,SAAUA,EAAS,CACjBsG,SAAU,SAAA9K,GAAK,OAAIA,IAAUoI,IAAYzC,UAAY,uCAEvDzB,MAAM,qBACNE,YAAY,6BACZG,MAAOS,EAAOsE,iBAAmBtE,EAAOsE,gBAAgB5D,UAG1D,kBAAC,EAAD,CACEvB,KAAK,OACL1B,KAAK,OACL+B,SAAUA,EACVN,MAAM,cACNE,YAAY,kBACZG,MAAOS,EAAOb,MAAQa,EAAOb,KAAKuB,UAGpC,kBAAC,GAAD,CACExB,MAAM,wBACNM,SAAUA,EACVL,KAAK,kBACLkC,OAAQuD,GACRrF,MAAOS,EAAO4E,iBAAmB5E,EAAO4E,gBAAgBlE,UAG1D,kBAAC,GAAD,CACExB,MAAM,YACNM,SAAUA,EACVL,KAAK,SACLkC,OAAQkB,GACRhD,MAAOS,EAAOuC,QAAUvC,EAAOuC,OAAO7B,UAGxC,kBAAC,GAAD,CACExB,MAAM,0BACNK,MAAOS,EAAO2C,mBAAqB3C,EAAO2C,kBAAkBjC,QAC5DvB,KAAK,oBACL6C,WAAW,0BACXxC,SAAUA,GAETmD,GAAkBrB,KAAI,SAAAC,GAAI,OACzB,4BAAQvG,MAAOuG,EAAME,IAAKC,QAASH,OAIvC,kBAAC,GAAD,CACErC,MAAM,kCACNM,SAAUA,EACVL,KAAK,MACLkC,OAAQ,CAAC,MAAO,UAChB9B,MAAOS,EAAOwE,KAAOxE,EAAOwE,IAAI9D,UAGlC,kBAAC,GAAD,CACExB,MAAM,mBACNK,MAAOS,EAAOyE,WAAazE,EAAOyE,UAAU/D,QAC5CvB,KAAK,YACL6C,WAAW,SACXxC,SAAUA,GAETsE,GAAOxC,KAAI,SAAAC,GAAI,OACd,4BAAQvG,MAAOuG,EAAKxC,GAAI0C,IAAKF,EAAKxC,IAAKwC,EAAKpC,UAIhD,kBAAC,GAAD,CACED,MAAM,0BACNK,MAAOS,EAAO0E,cAAgB1E,EAAO0E,aAAahE,QAClDvB,KAAK,eACL6C,WAAW,SACXxC,SAAUA,EACV0C,SApHiB,WACvBsB,GAAU,GACVK,YAAW,WAAQL,GAAU,KAAU,OAoHhCM,GAAOxC,KAAI,SAAAC,GAAI,OACd,4BAAQvG,MAAOuG,EAAKxC,GAAI0C,IAAKF,EAAKxC,IAAKwC,EAAKpC,UAIhD,kBAAC0B,EAAD,CAAIC,UAA+C,qBAA7BsC,IAAYsB,cAChC,kBAAC,GAAD,CACExF,MAAM,0BACNK,MAAOS,EAAO2E,aAAe3E,EAAO2E,YAAYjE,QAChDvB,KAAK,cACL6C,WAAW,SACXxC,SAAUA,EACVyC,UAAWA,GAEV8B,GACEC,QAAO,SAAAd,GAAI,OAAIA,EAAI,SAAae,aAAeb,IAAYsB,gBAC3DpD,KAAI,SAAA4C,GAAc,OACjB,4BACElJ,MAAOkJ,EAAe/E,KACtBsC,IAAKyC,EAAenF,IAEnBmF,EAAe/E,WAO1B,kBAAC,EAAD,CACEA,KAAK,UACL1B,KAAK,OACL+B,SAAUA,EACVN,MAAM,cACNE,YAAY,+BACZG,MAAOS,EAAO6E,SAAW7E,EAAO6E,QAAQnE,UAG1C,kBAAC,EAAD,CACEvB,KAAK,QACL1B,KAAK,OACL+B,SAAUA,EAAS,CACjBiB,QAAS,CACPzF,MAAO,aACP0F,QAAS,4BAEX0D,UAAW,CACTpJ,MAAO,GACP0F,QAAS,kCAGbxB,MAAM,mCACNE,YAAY,sBACZG,MAAOS,EAAOoF,OAASpF,EAAOoF,MAAM1E,UAGtC,kBAAC,GAAD,CACExB,MAAM,iBACNK,MAAOS,EAAO8E,WAAa9E,EAAO8E,UAAUpE,QAC5CvB,KAAK,YACL6C,WAAW,iBACXxC,SAAUA,GAETkD,GAAWpB,KAAI,SAAAC,GAAI,OAClB,4BAAQvG,MAAOuG,EAAME,IAAKC,QAASH,OAIvC,kBAAC,EAAD,CACEpC,KAAK,uBACL1B,KAAK,OACL+B,SAAUA,EACVN,MAAM,+DACNE,YAAY,iDACZG,MAAOS,EAAO+E,sBAAwB/E,EAAO+E,qBAAqBrE,UAGpE,kBAAC,GAAD,CACExB,MAAM,cACNM,SAAUA,EACVL,KAAK,kBACLkC,OAAQ,CAAC,MAAO,UAChB9B,MAAOS,EAAO+F,iBAAmB/F,EAAO+F,gBAAgBrF,UAG1D,kBAACG,EAAD,CAAIC,UAA2B,QAAhB8E,GACb,kBAAC,GAAD,CACE1G,MAAM,4BACNK,MAAOS,EAAOgG,qBAAuBhG,EAAOgG,oBAAoBtF,QAChEvB,KAAK,sBACL6C,WAAW,eACXxC,SAAUA,GAETiD,GAAcnB,KAAI,SAAA7D,GAAI,OACrB,4BAAQzC,MAAOyC,EAAMgE,IAAKC,QACvBjE,QAMT,kBAACoD,EAAD,CAAIC,WAA2B,IAAhB8E,GACb,kBAAC,GAAD,CACE1G,MAAM,gEACNM,SAAUA,EAAS,IAEnBL,KAAK,kBACLkC,OAAQ,CAAC,MAAO,UAChB9B,MAAOS,EAAOmE,iBAAmBnE,EAAOmE,gBAAgBzD,WAI5D,kBAACG,EAAD,CAAIC,WAA2B,IAAhBwC,GACb,kBAAC,GAAD,CACEpE,MAAM,4BACNM,SAAUA,EACV6B,OAAQmB,GACRrD,KAAK,6BAIT,kBAAC,GAAD,CACED,MAAM,4BACNM,SAAUA,EACV6B,OAAQgB,GACRlD,KAAK,mBAGP,kBAAC,GAAD,CACED,MAAM,4BACNM,SAAUA,EACVL,KAAK,OACLkC,OAAQ,CAAC,MAAO,UAChB9B,MAAOS,EAAOiG,MAAQjG,EAAOiG,KAAKvF,UAGpC,kBAAC,EAAD,CACExB,MAAM,WACNE,YAAY,oCACZ4B,KAAM,EACNzB,MAAOS,EAAOqF,KAAOrF,EAAOqF,IAAI3E,QAChCvB,KAAK,MACLK,SAAUA,EAAS,CACjBoB,UAAW,CACT5F,MAAO,GACP0F,QAAS,uCAKf,kBAAC,EAAD,CACExB,MAAM,6DACNE,YAAY,oBACZ4B,KAAM,EACNzB,MAAOS,EAAOsF,OAAStF,EAAOsF,MAAM5E,QACpCvB,KAAK,QACLK,SAAUA,EAAS,CACjBoB,UAAW,CACT5F,MAAO,GACP0F,QAAS,iCAIf,kBAAC,EAAD,CAAQjD,KAAK,UAAb,a,0lBCjWR,IAAMyI,GAAgBhM,IAAOC,IAAV,MAmBbgM,GAAejM,IAAOkM,OAAV,MACd,SAAAhM,GAAK,OAAIA,EAAMiM,OAAN,mDAaPC,GAAS,SAAC,GAAD,IAAG5L,EAAH,EAAGA,SAAH,OACb,kBAACyL,GAAD,CAAcjK,UAAU,UACtB,kBAACgK,GAAD,CAAehK,UAAU,WACtBxB,KAK2BqC,IAA1BE,UAA0BF,IAAfa,KAAeb,IAATwJ,KAOzBD,GAAOlJ,YAAc,SAGNkJ,U,sNCjBf,IAAME,GAAatM,IAAOC,IAAV,MAIVsM,GAAUvM,IAAOC,IAAV,MA+BEuM,GA1BH,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACV,kBAAC,IAAD,CAAeA,MAAOA,GACpB,kBAAC,IAAD,CAAQC,QAASA,GACf,kBAACJ,GAAD,KACE,kBAAC,EAAD,MACA,kBAACC,GAAD,KACE,kBAAC,IAAD,CAAOI,KAAK,IAAIC,OAAK,EAACC,UAAW/M,IACjC,kBAAC,IAAD,CAAO6M,KAAK,UAAUC,OAAK,EAACC,UAAWlH,IACvC,kBAAC,IAAD,CAAOgH,KAAK,qBAAqBE,UAAWnE,KAC5C,kBAAC,IAAD,CACEiE,KAAK,yBACLE,UAAW1C,KAEf,kBAAC,GAAD,CAAQgC,OAAK,GAAb,YClDOW,GAVO,CACpBC,MAAO,CACLC,EAAG,CAAEnI,GAAI,EAAGI,KAAM,OAAQgI,MAAO,M,2DCUtBC,GAVM,SAAAC,GACfA,EAEFC,KAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,KAAMC,SAASC,QAAQC,OAAvB,eCJI,IAAEC,WAASC,UCIR,CAChBC,SAAUC,aAAM,SAAOzF,EAAS0F,GAAhB,0BAAAC,EAAAC,OAAA,uDACNhN,EAAiB8M,EAAjB9M,MAAOiN,EAAUH,EAAVG,MADD,qBAAAF,EAAA,MAGMT,KAAMY,KAAK,mBAAoBlN,IAHrC,OAGNmN,EAHM,OAIZ/F,EAAQgG,QAAQ,CACd1C,KAAM,CACJpF,WAAOjF,EACPsF,cAAUtF,KAKNgM,EAAUc,EAAIhI,KAAdkH,MACRgB,aAAaC,QAAQ,WAAYjB,GAGjCD,GAAaC,GAGPkB,EAAUC,KAAUnB,GAG1BjF,EAAQgG,QAAQ,CACdK,iBAAkBrN,EAAQmN,GAC1B7C,KAAM6C,IAGR3B,GAAWqB,EACPrB,EAAQ8B,KAAR,WAAiBT,IACjBrB,EAAQ8B,KAAK,cAEjBT,GAASI,aAAaM,WAAW,mBA/BrB,yDAkCN3I,EAAS,KAAE4I,SAASzI,KAlCd,kBAmCLiC,EAAQyG,UAAU7I,IAnCb,4DAsChB8I,KAAM,CACJL,iBAAiB,EACjB/C,KAAM,CACJpF,WAAOjF,EACPsF,cAAUtF,IAGd0N,SAAU,CACRC,IAAK,GACL/G,WAAW,GAEbjC,OAAQ,GACRoI,QAASa,aAAO,SAACrF,EAAOkE,GACtBlE,EAAMkF,KAAOhB,KAEfoB,YAAaD,aAAO,SAACrF,EAAOkE,GAC1BlE,EAAMmF,SAAWjB,KAEnBe,UAAWI,aAAO,SAACrF,EAAOkE,GACxBlE,EAAM5D,OAAS8H,MD9DkBqB,cECf,CACpBxD,qBAAsBkC,aAAM,SAAOzF,EAAS0F,GAAhB,UAAAC,EAAAC,OAAA,gDAC1B5F,EAAQgH,QAAQtB,GAEhBR,KAAMY,KAAK,0BAA2BJ,GACnCuB,MAAK,WACJhB,aAAaiB,gBACT1C,EAAQ8B,KAAR,iBAAuBL,aAAaiB,kBACpC1C,EAAQ8B,KAAK,aAElBa,OAAM,SAAAC,GACL,IAAMxJ,EAASwJ,EAAIZ,SAASzI,KAC5B,OAAOiC,EAAQyG,UAAU7I,MAXH,wCAc5B0F,KAAM,GACN1F,OAAQ,GACRoJ,QAASH,aAAO,SAACrF,EAAOkE,GACtBlE,EAAM8B,KAAOoC,KAEfe,UAAWI,aAAO,SAACrF,EAAOkE,GACxBlE,EAAM5D,OAAS8H,OCrBb2B,GAAa,CACjBC,SAH4CC,GAAtCjC,QAINoB,KAJ4Ca,GAA7BhC,UAKfjC,KAL4CiE,GAAlBR,eAUbxC,GAFDiD,YAAYH,ICCNI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,CAAKxD,MAAOA,KAAWyD,SAASC,eAAe,SD4HzD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,MAAK,SAAAoB,GACjCA,EAAaC,kB","file":"static/js/main.78aad10d.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\nexport default createBrowserHistory()\n","import React from 'react'\n\nconst Home = () => {\n  return (\n    <div>Home!</div>\n  )\n}\n\nexport default Home","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst ModalStyled = styled.div`\n  display: ${props => !props.isOpen ? 'none' : 'block'}; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0,0,0); /* Fallback color */\n  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n`\n\nconst ModalContentStyled = styled.div`\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: ${props => `${props.width}`}; /* Could be more or less, depending on screen size */\n  border-radius: 10px;\n`\n\nconst CloseButtonStyled = styled.div`\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n\n  &:hover,\n  &:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n  }\n`\n\n\nconst Modal = ({ children, isOpen, onClose, width }) => (\n  <ModalStyled isOpen={isOpen}>\n    <ModalContentStyled width={width}>\n      <CloseButtonStyled onClick={onClose}>&times;</CloseButtonStyled>\n      {children}\n    </ModalContentStyled>\n  </ModalStyled>\n)\n\nModal.propTypes = {\n  /** Flag used to control modal open and close */\n  isOpen: PropTypes.bool,\n  /** Width of modal content in percent (%) */\n  width: PropTypes.string,\n  /** Function used when closing modal */\n  onClose: PropTypes.func.isRequired\n}\n\nModal.defaultProps = {\n  opened: false,\n  width: 30\n}\n\n/** @component */\nexport default Modal","import { css } from 'styled-components'\n\nexport const px = (value, defaultValue) => {\n  if (value && typeof value === 'string') {\n    return value\n  }\n\n  const newValue = `${value || defaultValue || 0}px`\n  return css`${newValue}`\n}\n\nexport const emailValidation = () => (\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n)\n\nexport const isEmpty = (value) => {  \n  return value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n}\n\nexport const parseText = input => input.toLowerCase().split(' ').join('_').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { px } from '../utils/service'\n\nconst Flexbox = styled(({ children, className }) => {\n  return (\n    <div className={className}>\n      {children}\n    </div>\n  )\n})`\n  display: flex;\n\n  ${props => props.horizontal && `\n    flex-direction: row;\n  `}\n  ${props => props.vertical && `\n    flex-direction: column;\n  `}\n\n  ${props => props.center && `\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n  `}\n\n  ${props => props.end && `\n    align-items: end;\n    justify-content: flex-end;\n  `}\n\n  ${props => props.justify && `\n    justify-content: ${props.justify};\n  `}\n\n  ${props => props.align && `\n    align-items: ${props.align};\n  `}\n\n  ${props => props.width && `\n    width: ${props.width};\n  `}\n\n  ${props => props.margin && props.margin.top && `margin-top: ${px(props.margin.top)};`}\n  ${props => props.margin && props.margin.bottom && `margin-bottom: ${px(props.margin.bottom)};`}\n  ${props => props.margin && props.margin.left && `margin-left: ${px(props.margin.left)};`}\n  ${props => props.margin && props.margin.right && `margin-right: ${px(props.margin.right)};`}\n\n  ${props => props.padding && props.padding.top && `padding-top: ${px(props.padding.top)};`}\n  ${props => props.padding && props.padding.bottom && `padding-bottom: ${px(props.padding.bottom)};`}\n  ${props => props.padding && props.padding.left && `padding-left: ${px(props.padding.left)};`}\n  ${props => props.padding && props.padding.right && `padding-right: ${px(props.padding.right)};`}\n`\n\n// decouple PropTypes only facility design props\nconst { shape, oneOfType, string, number } = PropTypes\n\nFlexbox.propTypes = {\n  horizontal: PropTypes.bool,\n  vertical: PropTypes.bool,\n  center: PropTypes.bool,\n  end: PropTypes.bool,\n  justify: PropTypes.oneOf(['space-around', 'space-between', 'center', 'space-evenly', 'flex-end']),\n  align: PropTypes.oneOf(['center', 'flex-end', 'flex-start']),\n  width: PropTypes.string,\n  /** The margin property. */\n  margin: shape({\n    top: oneOfType([string, number]),\n    bottom: oneOfType([string, number]),\n    left: oneOfType([string, number]),\n    right: oneOfType([string, number])\n  }),\n  /** The padding property. */\n  padding: shape({\n    top: oneOfType([string, number]),\n    bottom: oneOfType([string, number]),\n    left: oneOfType([string, number]),\n    right: oneOfType([string, number])\n  })\n}\n\nFlexbox.defaultProps = {\n  margin: {},\n  padding: {},\n}\n\nFlexbox.displayName = 'Flexbox'\n\nexport default Flexbox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n  ${props => `min-width: ${props.minWidth || '120px'};`}\n  ${props => props.margin && props.margin.top && `margin-top: ${props.margin.top};`}\n  ${props => props.margin && props.margin.bottom && `margin-bottom: ${props.margin.bottom};`}\n  ${props => props.margin && props.margin.left && `margin-left: ${props.margin.left};`}\n  ${props => props.margin && props.margin.right && `margin-right: ${props.margin.right};`}\n`\n\nconst Button = ({ type, onClick, children, disabled, styles }) => (\n  <StyledButton\n    className={`button ${styles}`}\n    disabled={disabled}\n    type={type}\n    onClick={onClick}\n  >\n    {children}\n  </StyledButton>\n)\n\nexport default Button\n\nconst { node, bool, string, shape, oneOfType, number } = PropTypes\n\nButton.propTypes = {\n  /** Children nodes. */\n  children: node,\n  /** Disable button. */\n  disabled: bool,\n  /** Button type. */\n  type: string,\n  /** Button min-width. */\n  minWidth: string,\n  /** Button margin. */\n  margin: shape({\n    top: oneOfType([string, number]),\n    bottom: oneOfType([string, number]),\n    left: oneOfType([string, number]),\n    right: oneOfType([string, number])\n  }),\n}\n\nButton.defaultProps = {\n  type: 'button',\n  disabled: false,\n  style: 'is-rounded normal is-danger',\n  margin: {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  }\n}","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Flexbox from '../Flexbox'\nimport Button from '../Button'\n\nconst VerticalLine = styled.div`\n  height: 150px;\n  border-left: 2px solid hsl(0, 0%, 29%);\n`\n\nconst SignupPopup = ({ onClick }) => (\n  <Fragment>\n    <Flexbox\n      width=\"100%\"\n      center\n      margin={{\n        top: 10,\n        bottom: 20,\n        left: 0,\n        right: 0\n      }}\n    >\n      <h1 className=\"title is-5\">\n        Selecione o tipo de cadastro que deseja:\n      </h1>\n    </Flexbox>\n    <Flexbox\n      justify=\"space-evenly\"\n      width=\"100%\"\n      align=\"center\"\n    >\n      <Link to=\"/cadastro/empresas\" onClick={onClick}>\n        <Button\n          styles=\"is-link\"\n        >\n          Empresa\n        </Button>\n      </Link>\n      <VerticalLine />\n      <Link to=\"/cadastro/profissional\" onClick={onClick}>\n        <Button\n          styles=\"is-danger\"\n        >\n          Profissional\n        </Button>\n      </Link>\n    </Flexbox>\n  </Fragment>\n)\n\nexport default SignupPopup","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Modal from '../components/Modal'\nimport SignupPopup from '../components/popups/Signup'\nimport Button from '../components/Button'\n\n// import { withRouter } from 'react-router';\n// import _ from 'lodash';\n\nconst Header = () => {\n\t// constructor(props) {\n\t// \tsuper(props);\n\t// \tthis.state = {\n\t// \t\tisActive: false,\n\t// \t\tisBurguerOpen: false,\n\t// \t}\n\t// }\n\n\t// componentDidMount() {\n\t// \twindow.addEventListener('resize', _.throttle(this.setWindowWidth, 500), false);\n\t// \t// this.props.dispatchScreenSize(document.documentElement.clientWidth);\n\t// }\n\n\t// componentWillUnmount() {\n\t// \twindow.removeEventListener('scroll', this.setWindowWidth, false);\n\t// }\n\n\t// setWindowWidth = () => {\n\t// \t// this.props.dispatchScreenSize(document.documentElement.clientWidth);\t\t\n\t// }\n\n\t// handleClick = (e) => {\n\t// \te.preventDefault();\n\t// \tthis.setState(prevState => ({ isBurguerOpen: !prevState.isBurguerOpen }));\n\t// }\n\n\t\t// const { auth: { isAuthenticated, user }, history } = this.props;\n    // const { isActive } = this.state;\n\n  const [modalStatus, setModalStatus] = useState(false)\n\n  return (\n    <nav\n      className=\"navbar\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item\" href=\"https://bulma.io\">\n          <img\n            src=\"https://bulma.io/images/bulma-logo.png\"\n            width=\"112\"\n            height=\"28\"\n            alt=\"RIO Logo\"\n          />\n        </a>\n        <button\n          type=\"button\"\n          className=\"navbar-burger burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </button>\n      </div>\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <NavLink to=\"/\" className=\"navbar-item\">\n            Home\n          </NavLink>\n          <button className=\"navbar-item\">\n            Documentation\n          </button>\n          <div className=\"navbar-item has-dropdown is-hoverable\">\n            <button className=\"navbar-link\">\n              More\n            </button>\n            <div className=\"navbar-dropdown\">\n              <button className=\"navbar-item\">\n                About\n              </button>\n              <button className=\"navbar-item\">\n                Jobs\n              </button>\n              <button className=\"navbar-item\">\n                Contact\n              </button>\n              <hr className=\"navbar-divider\" />\n              <button className=\"navbar-item\">\n                Report an issue\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <Button\n                onClick={() => setModalStatus(!modalStatus)}\n                styles=\"is-primary\"\n              >\n                Cadastre-se\n              </Button>\n              <NavLink to=\"/entrar\" className=\"button is-light\">\n                Entrar\n              </NavLink>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Modal\n        isOpen={modalStatus}\n        onClose={() => setModalStatus(false)}\n        width=\"500px\"\n      >\n        <SignupPopup\n          onClick={() => setModalStatus(false)}\n        />\n      </Modal>\n    </nav>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n// \tdispatchScreenSize: value => {\n// \t\tdispatch(setScreenSize(value));\n// \t},\n// \tlogoutUser: (history) => {\n// \t\tdispatch(logoutUser(history));\n// \t}\n// })\n\n// const mapStateToProps = state => ({\n// \tauth: state.auth\n// })\n\nexport default Header;\n","import React from \"react\"\nimport PropTypes from 'prop-types'\n\nconst InputText = (\n  {\n    label,\n    name,\n    type,\n    placeholder,\n    icon,\n    help,\n    error,\n    register\n  }) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{label}</label>\n        <div\n          className={`control ${icon ? \"has-icons-left\" : \"\"} ${error ? \"has-icons-right\" : \"\"}`}\n        >\n          <input\n            className={`input ${error ? \"is-danger\" : \"\"}`}\n            type={type}\n            placeholder={placeholder}\n            name={name}\n            ref={register}\n          />\n          {icon && (\n            <span\n              className=\"icon is-left is-small\"\n              style={{ 'zIndex': 'unset ' }}\n            >\n              <i className={`fas ${icon}`} />\n            </span>\n          )}\n          {error && (\n            <span className=\"icon is-right is-small\">\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n        {help && <p className=\"help\">{help}</p>}\n        {error &&\n          <p className=\"help is-danger\">\n            {error}\n          </p>\n        }\n    </div>\n  )\n}\n\nInputText.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  icon: PropTypes.string,\n  help: PropTypes.string,\n  register: PropTypes.func.isRequired\n  // margin: shape({\n  //   top: oneOfType([string, number]),\n  //   bottom: oneOfType([string, number]),\n  //   left: oneOfType([string, number]),\n  //   right: oneOfType([string, number])\n  // }),\n  // /** The padding property. */\n  // padding: shape({\n  //   top: oneOfType([string, number]),\n  //   bottom: oneOfType([string, number]),\n  //   left: oneOfType([string, number]),\n  //   right: oneOfType([string, number])\n  // })\n}\n\nInputText.defaultProps = {\n  type: \"text\",\n  help: undefined,\n  error: undefined\n}\n\nexport default InputText\n","import styled from 'styled-components';\n\nexport const FullWidth = styled.div`\n  width: 100%;\n  padding: 40px;\n`\n\nexport const Form = styled.form`\n  background-color: pink;\n  width: 100%;\n  padding: 20px;\n  @media(min-width: 576px) {\n    width: unset;\n  }\n`\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 20px;\n`","import React, { Fragment, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from 'react-hook-form'\n// import { useStoreState } from 'easy-peasy'\n\nimport InputText from '../../components/InputText'\nimport Flexbox from '../../components/Flexbox'\nimport Modal from '../../components/Modal'\nimport Button from '../../components/Button'\nimport SignupPopup from '../../components/popups/Signup'\n\nimport { Form, InputWrapper } from './style'\nimport { emailValidation } from '../../utils/service'\n\nconst Login = () => {\n  \n  const [modalStatus, setModalStatus] = useState(false)\n  const { register, handleSubmit, errors, clearError } = useForm()\n\n  const onSubmit = data => { console.log(data) }\n\n  const toggleModal = () => {\n    clearError()\n    return setModalStatus(!modalStatus)\n  }\n\n  return (\n    <Fragment>\n      <Flexbox center>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Flexbox\n            center\n            width=\"100%\"\n            margin={{\n              top: 10,\n              bottom: 10,\n              left: 0,\n              right: 0\n            }}\n          >\n            <h1 className=\"title has-text-danger\">entre no rio</h1>\n          </Flexbox>\n          <InputWrapper>\n            <InputText \n              label=\"E-mail\"\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"e-mail\"\n              icon=\"fa-envelope\"\n              error={errors && errors.email}\n              isEdit={true}\n              register={register({\n                required: 'Esse campo é obrigatório',\n                pattern: {\n                  value: emailValidation(),\n                  message: 'Insira um endereço de e-mail válido'\n                }\n              })}\n            />\n            <InputText \n              label=\"Senha\"\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"senha\"\n              icon=\"fa-lock\"\n              error={errors && errors.password}\n              isEdit={true}\n              register={register({\n                required: 'Esse campo é obrigatório',\n                minLength: {\n                  value: 10,\n                  message: 'A senha deve ter no mínimo 10 caracteres'\n                }\n              })}\n            />\n            <Link \n              to=\"/esqueci-senha\" \n              className=\"has-text-link\"\n            >\n              esqueceu sua senha?\n            </Link>\n          </InputWrapper>\n          <Flexbox justify=\"space-around\" className=\"control\">    \n            <Button\n              onClick={toggleModal}\n              styles=\"button is-rounded\"\n            >\n              cadastre-se\n            </Button>\n            <Button type=\"submit\" styles=\"is-danger is-rounded\">\n              entrar\n            </Button>     \n          </Flexbox>\n        </Form>\n      </Flexbox>\n      <Modal\n        isOpen={modalStatus}\n        onClose={() => setModalStatus(false)}\n        width=\"500px\"\n      >\n        <SignupPopup />\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Login","export const If = ({ condition, children }) => (condition ? children : false);\n\nexport const IfElse = ({ condition, True, False }) =>\n  condition ? True : False;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Textarea = ({ placeholder, label, rows, register, error, name }) => {\n  return (\n    <div className=\"field\">\n      <label className=\"label\">{label}</label>\n      <div className={`control ${error ? \"has-icons-right\" : \"\"}`}>\n        <textarea\n          className={`textarea ${error ? \"is-danger\" : \"\"}`}\n          placeholder={placeholder}\n          rows={rows}\n          ref={register}\n          name={name}\n        >  \n        </textarea>\n        {error && (\n          <span className=\"icon is-right is-small\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </span>\n        )}\n        {error &&\n          <p className=\"help is-danger\">\n            {error}\n          </p>\n        }\n      </div>\n    </div>\n  )\n}\n\nTextarea.propTypes = {\n  placeholder: PropTypes.string,\n  rows: PropTypes.number,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  error: PropTypes.string\n}\n\nTextarea.defaultProps = {\n  rows: 5\n}\n\nexport default Textarea","import React from 'react'\nimport PropTypes from 'prop-types'\nimport uuid from 'uuid'\nimport styled from 'styled-components'\nimport { parseText as parse } from '../utils/service'\n\nconst mobile = '576px'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  @media(min-width: ${mobile}) {\n    justify-content: space-between;\n    flex-wrap: wrap;\n    flex-direction: row;\n  }\n`\nconst Label = styled.label`\n  display: flex;\n  margin-bottom: 10px;\n  @media(min-width: ${mobile}) {\n    width: 50%;\n  }\n`\nconst Checkbox = styled.input`\n  margin-right: 10px;\n`\n\nconst Checkboxes = ({ label, register, name, fields }) => (\n  <div className=\"field\">\n    <label className=\"label\">{label}</label>\n    <Wrapper>\n      {fields.map(item => {\n        const checkedItem = typeof item !== 'string' ? item.name : item\n        return (\n          <Label key={uuid()} className=\"control checkbox\">\n            <Checkbox\n              type=\"checkbox\"\n              name={`${name}[${parse(checkedItem)}]`}\n              ref={register}\n            /> \n            <span>{checkedItem}</span>\n          </Label>\n        )\n      })}\n    </Wrapper>\n  </div>\n)\n\nCheckboxes.propTypes = {\n  label: PropTypes.string,\n  register: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired\n}\n\nexport default Checkboxes","import React from 'react'\nimport uuid from 'uuid'\nimport { parseText as parse } from '../utils/service'\nimport styled from 'styled-components'\n\nconst StyledRadio = styled.label`\n  display: flex;\n  align-items: center;\n`\nconst Input = styled.input`\n  margin-right: 10px;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst Radios = ({ register, name, label, fields, error }) => (\n  <div className=\"field\">\n    <label className=\"label\">{label}</label>\n    <Wrapper>\n      {fields.map(item => (\n        <StyledRadio className=\"radio\" key={uuid()}>\n          <Input\n            type=\"radio\"\n            name={`${name}[${parse(item)}]`}\n            ref={register}\n            className={`${error ? \"is-danger\" : \"\"}`}\n          />\n          <span>{item}</span>\n        </StyledRadio>\n      ))}\n    </Wrapper>\n    {error &&\n      <p className=\"help is-danger\">\n        {error}\n      </p>\n    }\n  </div>\n)\n\nexport default Radios","import React from \"react\"\nimport PropTypes from 'prop-types'\n\nconst Select = (\n  {\n    label,\n    error,\n    name,\n    firstValue,\n    children,\n    register,\n    isLoading = false,\n    onChange\n  }) => (\n    <div className=\"field\">\n      <label className=\"label\">{label}</label>\n        <div className=\"control\">\n          <div className={`select ${error ? \"is-focused is-danger\" : \"\"} ${isLoading ? \"is-loading\" : \"\"}`}>\n            <select name={name} ref={register} onChange={onChange}>\n              <option value=\"\">{firstValue}</option>\n              {children}\n            </select>\n          </div>\n          {error && <p className=\"help is-danger\">{error}</p>}\n        </div>\n    </div>\n  )\n\nSelect.propTypes = {\n  label: PropTypes.string,\n  error: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  firstValue: PropTypes.string.isRequired,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n  register: PropTypes.func.isRequired\n}\n\nexport default Select\n","export const segment = [\"Desenvolvedora de conteúdo\", \"Produtora de conteúdo\", \"Distribuidora de conteúdo\", \"Exibidora de conteúdo\", \"Empacotadora de conteúdo\", \"Programadora de conteúdo\", \"Outros\"]\n\nexport const actions = [\"Streaming\", \"Cinema\", \"Publicidade\", \"Televisão\", \"Games\", \"Internet\", \"Outros\"]\n\nexport const functions = [\"Produtor(a) de Conteúdo\", \"Roteirista\", \"Consultor(a) de Roteiro\", \"Pesquisador(a)\", \"Produtor(a) Executivo\", \"Controller\", \"Diretor(a) de Produção\", \"Assistente de Produção\", \"Platô\", \"Direto(a)\", \"Assistente de Direção\", \"StoryBoarder\", \"Continuista\", \"Produtor(a) de Elenco\", \"Preparador(a) de Elenco\", \"Diretor(a) de Arte\", \"Produtor(a) de Arte\", \"Cenógrafo(a)\", \"Produtor(a) de objetos\", \"Figurinista\", \"Caracterizador(a)\", \"Supervisor(a) de Efeitos Especiais\", \"Chefe de Maquinária\", \"Assistente de Máquinaria\", \"Chefe de Elétrica | Gaffer\", \"Eletricista de Pré-Light\", \"Diretor(a) de Fotografia\", \"Operador(a) de Câmera\", \"Assistente de Câmera\", \"DIT | Técnico(a) de Imagem Digital - TID\", \"GMA | Logger\", \"Still\", \"Operador(a) de Video Assist\", \"Técnico(a) de Som\", \"Assistente de Som\", \"Editor(a)\", \"Assistente de Edição\", \"Supervisor(a) de Pós-Produção\", \"Assistente de Pós-Produção\", \"Supervisor(a) de Efeitos Visuais\", \"Produtor(a) de Efeitos Visuais\", \"Editor(a) On-line\", \"Correção de Cor\", \"Editor(a) de Som\", \"Legendagem\", \"Supervisor(a) Musical\", \"Compositor(a) Musical\", \"Animador(a)\"]\n\nexport const color = [\"Negra\", \"Branca\", \"Indigena\", \"Amarela\", \"Outros\"]\n\nexport const gender = [\"Mulher Cis\", \"Mulher Trans\", \"Homem Cis\", \"Homem Trans\", \"Queer\", \"Não Binário\", \"Outro\"]\n\nexport const identitySegments = [\"Audiovisual Negro\", \"Audiovisual Indígena\", \"Audiovisual LGBTI+\", \"Audiovisual Feminista\", \"Audiovisual Queer\", \"Audiovisual Ambiental\", \"Minha empresa não é vocacionada para Conteúdo Identitário\", \"Outro\"]\n\nexport const registryTypes = [\"MEI\", \"EIRELI\", \"ME\", \"Outro\"]\n\nexport const formations = [\"Autodidata\", \"ONG ou Instituição Cultural\", \"Formação Técnica\", \"Universidade ou Faculdade\"]\n\nexport const sexualOrientation = [\"Lésbica\", \"Gay\", \"Bissexual\", \"Panssexual\", \"Assexual\", \"Heterossexual\", \"Outros\"]","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n`\n\nexport const Form = styled.form`\n  width: 50%;\n  margin: 50px;\n`","import React, { useState } from 'react'\nimport { useForm } from 'react-hook-form'\n\nimport { If } from '../../components/If'\nimport InputText from '../../components/InputText'\nimport Flexbox from '../../components/Flexbox'\nimport Button from '../../components/Button'\nimport Textarea from '../../components/Textarea'\nimport Checkboxes from '../../components/Checkboxes'\nimport Radios from '../../components/Radios'\nimport Select from '../../components/Select'\n\nimport { emailValidation } from '../../utils/service'\nimport cities from '../../assets/cities.json'\nimport states from '../../assets/states.json'\nimport {\n  segment,\n  actions,\n  functions,\n  color,\n  gender,\n  identitySegments\n} from './dicioFields'\n\nimport { Form } from './styles'\n\nconst Enterprise = () => {\n  const { register, handleSubmit, errors, getValues, watch } = useForm({\n    defaultValues: {\n      companyLinks: 'blablablablablablablablablablablabla',\n      companyPresentation: 'blablablablablablablablablablablabla',\n      email: 'test@test.com',\n      tel: 12988801105,\n      responsibleName: 'blablabla',\n      city: 'blablabla',\n      companyName: 'blebli'\n    },\n  })\n\n  const identityYes = watch('identityContent'); \n  const hasState = watch('state')\n  const onSubmit = (data, e) => {\n    e.preventDefault()\n    console.log(data)\n  }\n  const [isLoading, setLoader] = useState(false)\n  console.log({ errors, values: getValues() })\n  console.log(hasState)\n\n  const programIsLoading = () => {\n    setLoader(true)\n    setTimeout(() => { setLoader(false) }, 2000);\n  }\n\n  return (\n    <Flexbox justify=\"center\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Select\n          label=\"Estado\"\n          error={errors.state && errors.state.message}\n          name=\"state\"\n          firstValue=\"Estado\"\n          register={register({\n            required: 'Esse campo é obrigatório'\n          })}\n          onChange={programIsLoading}\n          isLoading={false}\n        >\n          {states.map(item => \n            <option value={item.id} key={item.id}>{item.name}</option>\n          )}      \n        </Select>\n        <If condition={typeof hasState !== 'undefined'}>\n          <Select\n            label=\"Cidade\"\n            error={errors.city && errors.city.message}\n            name=\"city\"\n            firstValue=\"Cidade\"\n            register={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            isLoading={isLoading}\n          >\n            {cities\n              .filter(city => city['state_id'].toString() === getValues().state)\n              .map(filteredCities => (\n                <option\n                  value={filteredCities.name}\n                  key={filteredCities.id}\n                >\n                  {filteredCities.name}\n                </option>\n            ))\n            }\n          </Select>\n        </If>\n        <Checkboxes\n          label=\"Outros estados que a empresa tem atuação\"\n          register={register}\n          fields={states}\n          name=\"otherStates\"\n        />\n        <Checkboxes\n          label=\"Segmento de atuação\"\n          register={register}\n          fields={segment}\n          name=\"segment\"\n        />\n        <Checkboxes\n          label=\"Campos de atuação\"\n          register={register}\n          fields={actions}\n          name=\"actionFields\"\n        />\n        <Checkboxes\n          label=\"Funções que busca diversificar na empresa :\"\n          register={register}\n          fields={functions}\n          name=\"companyFunctions\"\n        />\n        <Radios\n          label=\"Auto Declaração (pessoa responsável pelo cadastro)\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n          })}\n          name=\"color\"\n          fields={color}\n          error={errors.color && errors.color.message}\n        />\n        <Radios\n          label=\"Gênero (pessoa responsável pelo cadastro)\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n          })}\n          name=\"gender\"\n          fields={gender}\n          error={errors.gender && errors.gender.message}\n        />\n        <Radios\n          label=\"Sua empresa é vocacionada para conteúdo identitário?\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n          })}\n          name=\"identityContent\"\n          fields={[\"Sim\", \"Não\"]}\n          error={errors.identityContent && errors.identityContent.message}\n        />\n        <If condition={identityYes === 'sim'}>\n          <Checkboxes\n            label=\"Se sim, em qual segmento?\"\n            register={register({\n              required: 'Esse campo é obrigatório'\n            })}\n            fields={identitySegments}\n            name=\"companyIdentitySegments\"\n          />\n        </If>\n        <InputText\n          name=\"email\"\n          type=\"text\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n            pattern: {\n              value: emailValidation(),\n              message: 'Insira um endereço de e-mail válido'\n            }\n          })}\n          label=\"Endereço de e-mail\"\n          placeholder=\"Insira um endereço de e-mail válido\"\n          error={errors.email && errors.email.message}\n        />\n        <InputText\n          name=\"companyName\"\n          type=\"text\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n          })}\n          label=\"Nome da empresa\"\n          placeholder=\"Insira o nome da empresa\"\n          error={errors.companyName && errors.companyName.message}\n        />\n        <InputText\n          name=\"tel\"\n          type=\"text\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n            pattern: {\n              value: /^[0-9]*$/gm,\n              message: 'Insira apenas números'\n            },\n            maxLength: {\n              value: 11,\n              message: 'Máximo de onze números'\n            }\n          })}\n          label=\"Contato Telefonico (DDD + nº)\"\n          placeholder=\"Insira o telefone da empresa\"  \n          error={errors.tel && errors.tel.message}\n        />\n        <InputText\n          name=\"responsibleName\"\n          type=\"text\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n          })}\n          label=\"Nome da pessoa responsável pelo cadastro\"\n          placeholder=\"Insira o nome da pessoa responsável\"\n          error={errors.responsibleName && errors.responsibleName.message}\n        />\n        <InputText\n          name=\"city\"\n          type=\"text\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n          })}\n          label=\"Cidade sede\"\n          placeholder=\"Insira a cidade sede\"\n          error={errors.city && errors.city.message}\n        />\n        <Textarea\n          label=\"Apresentação da empresa\"\n          placeholder=\"Insira uma apresentação\"\n          rows={5}\n          error={errors.companyPresentation && errors.companyPresentation.message}\n          name=\"companyPresentation\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n            minLength: {\n              value: 15,\n              message: 'Apresentação curta demais'\n            }\n          })}\n        />\n        <Textarea\n          label=\"Links para site e redes socias da empresa\"\n          placeholder=\"Insira aqui links\"\n          rows={5}\n          error={errors.companyLinks && errors.companyLinks.message}\n          name=\"companyLinks\"\n          register={register({\n            required: 'Esse campo é obrigatório',\n            minLength: {\n              value: 10,\n              message: 'Insira pelo menos um link'\n            }\n          })}\n        />\n        <Button type=\"submit\">Enviar</Button>\n      </Form>\n    </Flexbox>\n  )\n}\n\nexport default Enterprise","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useStoreActions } from 'easy-peasy'\nimport uuid from 'uuid'\n\nimport { If } from '../../components/If'\nimport InputText from '../../components/InputText'\nimport Flexbox from '../../components/Flexbox'\nimport Button from '../../components/Button'\nimport Textarea from '../../components/Textarea'\nimport Checkboxes from '../../components/Checkboxes'\nimport Radios from '../../components/Radios'\nimport Select from '../../components/Select'\n\nimport { emailValidation } from '../../utils/service'\nimport cities from '../../assets/cities.json'\nimport states from '../../assets/states.json'\nimport {\n  functions,\n  color as selfDeclaration,\n  gender,\n  registryTypes,\n  formations,\n  identitySegments,\n  sexualOrientation\n} from './dicioFields'\n\nimport { Form } from './styles'\n\nconst Professionals = () => {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    getValues,\n    watch,\n    setValue\n  } = useForm({\n    defaultValues: {\n      name: \"Viviane\",\n      email: \"vivi@gmail.com\",\n      password: \"123456\",\n      confirmPassword: \"123456\",\n      birthday:\"12/1/1995\",\n      gender: \"bla\",\n      pcd: true,\n      homeState: \"bla\",\n      currentState:\"bla\",\n      currentCity: \"bla\",\n      selfDeclaration: \"bla\",\n      address: \"blabla\",\n      education: \"blabla\",\n      formationInstitution: \"bla\",\n      cnpj: true,\n      cnpjType: \"bla\",\n      identityContent: true,\n      identitySegments: \"\",\n      expertiseAreas: \"bla\",\n      apanAssociate: true,\n      phone: \"13123123\",\n      sexualOrientation: \"bla\",\n      bio: \"blasdjasjkdaskdbaskd\",\n      links: \"blablablablabldajsdnkasjdnsaja\"\n    }\n  })\n\n  const registerUser = useStoreActions(actions => actions.user.registerProfessional)\n  const onSubmit = (data, e) => {\n    e.preventDefault()\n    console.log(data)\n    registerUser({data})\n  }\n\n  const hasRegistry = watch('companyRegistry')\n  const identityYes = watch('identityContent')\n\n  const [isLoading, setLoader] = useState(false)\n  const programIsLoading = () => {\n    setLoader(true)\n    setTimeout(() => { setLoader(false) }, 2000);\n  }\n\n  useEffect(() => {\n    register({ name: 'birthday' });\n  }, [register])\n\n  const handleBirthday = selectedOption => setValue('birthday', selectedOption);\n\n  return (\n    <Flexbox justify=\"center\">\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <InputText\n          name=\"email\"\n          type=\"text\"\n          register={register({\n            pattern: {\n              value: emailValidation(),\n              message: 'Insira um endereço de e-mail válido'\n            }\n          })}\n          label=\"Endereço de e-mail\"\n          placeholder=\"Insira um endereço de e-mail válido\"\n          error={errors.email && errors.email.message}\n        />\n\n        <InputText\n          name=\"password\"\n          type=\"password\"\n          register={register({\n            minLength: {\n              value: 6,\n              message: 'A senha precisa ter no mínimo 6 caracteres'\n            }\n          })}\n          label=\"Senha\"\n          placeholder=\"Insira uma senha\"\n          error={errors.password && errors.password.message}\n        />\n\n        <InputText\n          name=\"confirmPassword\"\n          type=\"password\"\n          register={register({\n            validate: value => value === getValues().password || 'As senhas não são identicas'\n          })}\n          label=\"Confirme sua senha\"\n          placeholder=\"Insira sua senha novamente\"\n          error={errors.confirmPassword && errors.confirmPassword.message}\n        />\n\n        <InputText\n          name=\"name\"\n          type=\"text\"\n          register={register}\n          label=\"Nome social\"\n          placeholder=\"Insira seu nome\"\n          error={errors.name && errors.name.message}\n        />\n\n        <Radios\n          label=\"Auto Declaração\"\n          register={register}\n          name=\"selfDeclaration\"\n          fields={selfDeclaration}\n          error={errors.selfDeclaration && errors.selfDeclaration.message}\n        />\n\n        <Radios\n          label=\"Gênero\"\n          register={register}\n          name=\"gender\"\n          fields={gender}\n          error={errors.gender && errors.gender.message}\n        />\n\n        <Select\n          label=\"Orientação sexual\"\n          error={errors.sexualOrientation && errors.sexualOrientation.message}\n          name=\"sexualOrientation\"\n          firstValue=\"Orientação Sexual\"\n          register={register}\n        >\n          {sexualOrientation.map(item =>\n            <option value={item} key={uuid()}>{item}</option>\n          )}\n        </Select>\n\n        <Radios\n          label=\"PcD (Pessoa com deficiência)\"\n          register={register}\n          name=\"pcd\"\n          fields={[\"Sim\", \"Não\"]}\n          error={errors.pcd && errors.pcd.message}\n        />\n\n        <Select\n          label=\"Estado de origem\"\n          error={errors.homeState && errors.homeState.message}\n          name=\"homeState\"\n          firstValue=\"Estado\"\n          register={register}\n        >\n          {states.map(item =>\n            <option value={item.id} key={item.id}>{item.name}</option>\n          )}\n        </Select>\n\n        <Select\n          label=\"Estado de residência\"\n          error={errors.currentState && errors.currentState.message}\n          name=\"currentState\"\n          firstValue=\"Estado\"\n          register={register}\n          onChange={programIsLoading}\n        >\n          {states.map(item =>\n            <option value={item.id} key={item.id}>{item.name}</option>\n          )}\n        </Select>\n\n        <If condition={typeof getValues().currentState !== 'undefined'}>\n          <Select\n            label=\"Cidade de Residência\"\n            error={errors.currentCity && errors.currentCity.message}\n            name=\"currentCity\"\n            firstValue=\"Cidade\"\n            register={register}\n            isLoading={isLoading}\n          >\n            {cities\n              .filter(city => city['state_id'].toString() === getValues().currentState)\n              .map(filteredCities => (\n                <option\n                  value={filteredCities.name}\n                  key={filteredCities.id}\n                >\n                  {filteredCities.name}\n                </option>\n              ))\n            }\n          </Select>\n        </If>\n\n        <InputText\n          name=\"address\"\n          type=\"text\"\n          register={register}\n          label=\"Endereço\"\n          placeholder=\"Insira seu endereço atual\"\n          error={errors.address && errors.address.message}\n        />\n\n        <InputText\n          name=\"phone\"\n          type=\"text\"\n          register={register({\n            pattern: {\n              value: /^[0-9]*$/gm,\n              message: 'Insira apenas números'\n            },\n            maxLength: {\n              value: 11,\n              message: 'Máximo de onze números'\n            }\n          })}\n          label=\"Contato Telefonico (DDD + nº)\"\n          placeholder=\"Insira seu telefone\"\n          error={errors.phone && errors.phone.message}\n        />\n\n        <Select\n          label=\"Formação\"\n          error={errors.education && errors.education.message}\n          name=\"education\"\n          firstValue=\"Formação\"\n          register={register}\n        >\n          {formations.map(item =>\n            <option value={item} key={uuid()}>{item}</option>\n          )}\n        </Select>\n\n        <InputText\n          name=\"formationInstitution\"\n          type=\"text\"\n          register={register}\n          label=\"Qual foi a instituição ou processo de formação? \"\n          placeholder=\"Insira sua instituição de formação\"\n          error={errors.formationInstitution && errors.formationInstitution.message}\n        />\n\n        <Radios\n          label=\"Possui CNPJ\"\n          register={register}\n          name=\"companyRegistry\"\n          fields={[\"Sim\", \"Não\"]}\n          error={errors.companyRegistry && errors.companyRegistry.message}\n        />\n\n        <If condition={hasRegistry === 'sim'}>\n          <Select\n            label=\"Qual o tipo do seu CNPJ ?\"\n            error={errors.companyRegistryType && errors.companyRegistryType.message}\n            name=\"companyRegistryType\"\n            firstValue=\"Tipo de CPNJ\"\n            register={register}\n          >\n            {registryTypes.map(type => (\n              <option value={type} key={uuid()}>\n                {type}\n              </option>\n            ))}\n          </Select>\n        </If>\n\n        <If condition={hasRegistry === true}>\n          <Radios\n            label=\"Sua empresa é vocacionada para conteúdo identitário?\"\n            register={register({\n            })}\n            name=\"identityContent\"\n            fields={[\"Sim\", \"Não\"]}\n            error={errors.identityContent && errors.identityContent.message}\n          />\n        </If>\n\n        <If condition={identityYes === true}>\n          <Checkboxes\n            label=\"Se sim, em qual segmento?\"\n            register={register}\n            fields={identitySegments}\n            name=\"companyIdentitySegments\"\n          />\n        </If>\n\n        <Checkboxes\n          label=\"Áreas de atuação\"\n          register={register}\n          fields={functions}\n          name=\"expertiseAreas\"\n        />\n\n        <Radios\n          label=\"É associado(a) da APAN\"\n          register={register}\n          name=\"apan\"\n          fields={[\"Sim\", \"Não\"]}\n          error={errors.apan && errors.apan.message}\n        />\n\n        <Textarea\n          label=\"Mini Bio\"\n          placeholder=\"Insira uma apresentação sua\"\n          rows={5}\n          error={errors.bio && errors.bio.message}\n          name=\"bio\"\n          register={register({\n            minLength: {\n              value: 15,\n              message: 'Apresentação curta demais'\n            }\n          })}\n        />\n\n        <Textarea\n          label=\"Links para IMDB, currículo, portfólio, reel e outros\"\n          placeholder=\"Insira aqui links\"\n          rows={5}\n          error={errors.links && errors.links.message}\n          name=\"links\"\n          register={register({\n            minLength: {\n              value: 10,\n              message: 'Insira pelo menos um link'\n            }\n          })}\n        />\n        <Button type=\"submit\">Enviar</Button>\n      </Form>\n    </Flexbox>\n  )\n}\n\nexport default Professionals","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nconst FooterContent = styled.div`\n  flex-grow: 1;\n  padding: 0 0 0 84.7px;\n\n  & a {\n    font-family: 'Nunito Sans', sans-serif;\n    font-size: 13px;\n    font-weight: 800;\n    text-transform: uppercase;\n    text-decoration: none;\n    margin-right: 35px;\n    color: #fff;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`\n\nconst StyledFooter = styled.footer`\n  ${props => props.fixed && `\n    position: absolute;\n    bottom: 0;\n  `}\n  display: flex;\n  align-items: center;\n  height: 94px;\n  background: #000;\n  padding: 0 150px;\n  overflow: hidden;\n  width: auto;\n`\n\nconst Footer = ({ children }) => (\n  <StyledFooter className=\"footer\">\n    <FooterContent className=\"content\">\n      {children}\n    </FooterContent>\n  </StyledFooter>\n)\n\nconst { oneOfType, node, func } = PropTypes\n\nFooter.propTypes = {\n  /** The content of the footer. */\n  children: oneOfType([node, func]),\n}\n\nFooter.displayName = 'Footer'\n\n/** @component */\nexport default Footer\n","import React from 'react'\n\nimport PropTypes from 'prop-types'\nimport { Route } from 'react-router'\nimport { Router } from 'react-router-dom'\nimport { StoreProvider } from 'easy-peasy';\n// import jwtDecode from 'jwt-decode'\nimport styled from 'styled-components'\n\n// import setAuthToken from '../services/setAuthToken'\n// import { handleAuth, logoutUser } from '../actions/auth'\nimport history from './history'\n\n// import PrivateRoute from './PrivateRoute/PrivateRoute'\nimport Home from './pages/Home'\nimport Header from './components/Header'\nimport Login from './pages/Login/Login'\nimport Enterprise from './pages/Signup/Enterprise'\nimport Professionals from './pages/Signup/Professionals'\nimport Footer from './components/Footer'\n\n// if (localStorage.jwtToken) {\n//   // Set the auth token header auth\n//   setAuthToken(localStorage.jwtToken)\n//   // Decode token and get user info and exp\n//   const decoded = jwtDecode(localStorage.jwtToken)\n//   // Set user and auth\n//   store.dispatch(handleAuth(decoded))\n//   // Check for expired token\n//   const currentTime = Date.now() / 1000\n//   if (decoded.exp < currentTime) {\n//     // Logout user\n//     // Clear current profile\n//     // Redirect to login\n//     store.dispatch(logoutUser())\n//   }\n// }\n\nconst AppWrapper = styled.div`\n  height: 100vh;\n`\n\nconst AppBody = styled.div`\n  height: calc(100vh - 3.25rem);\n  width: 100%;\n`\n\nconst App = ({ store }) => (\n  <StoreProvider store={store}>\n    <Router history={history}>\n      <AppWrapper>\n        <Header />\n        <AppBody>\n          <Route path=\"/\" exact component={Home} />\n          <Route path='/entrar' exact component={Login} />\n          <Route path='/cadastro/empresas' component={Enterprise} />\n          <Route\n            path='/cadastro/profissional'\n            component={Professionals}\n          />\n        <Footer fixed>\n          Bla\n        </Footer>\n        </AppBody>\n      </AppWrapper>\n    </Router>\n  </StoreProvider>\n)\n\nApp.propTypes = {\n  store: PropTypes.object.isRequired,\n}\n\nexport default App\n","const productsModel = {\n  items: {\n    1: { id: 1, name: 'Peas', price: 10 }\n  }\n};\n\n// const basketModel = {\n//   productIds: [1]\n// };\n\nexport default productsModel","import axios from 'axios'\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization']\n  }\n}\n\nexport default setAuthToken\n","import example from './example'\nimport authModel from './auth'\nimport registerModel from './register'\n\nexport default { example, authModel, registerModel }","import { thunk, action } from 'easy-peasy'\nimport jwtDecode from 'jwt-decode'\nimport axios from 'axios'\n\nimport setAuthToken from '../utils/setAuthToken'\nimport history from '../history'\nimport { isEmpty } from '../utils/service'\n\nconst authModel = {\n  authUser: thunk(async (actions, payload) => {\n    const { value, query } = payload\n    try {\n      const res = await axios.post('/api/users/login', value)\n      actions.setAuth({\n        user: {\n          email: undefined,\n          password: undefined\n        }\n      })\n  \n      // Set token to localStorage\n      const { token } = res.data\n      localStorage.setItem('jwtToken', token)\n  \n      // Set token to auth header\n      setAuthToken(token)\n  \n      // Decode token to get user data\n      const decoded = jwtDecode(token)\n  \n      // Set current user\n      actions.setAuth({\n        isAuthenticated: !isEmpty(decoded),\n        user: decoded\n      })\n  \n      history && query\n        ? history.push(`/${query}`)\n        : history.push('/dashboard')\n  \n      query && localStorage.removeItem('defaultLocation')\n    }\n    catch (e) {\n      const errors = e.response.data\n      return actions.setErrors(errors)\n    }\n  }),\n  auth: {\n    isAuthenticated: false,\n    user: {\n      email: undefined,\n      password: undefined\n    }\n  },\n  recovery: {\n    msg: '',\n    isLoading: false\n  },\n  errors: {},\n  setAuth: action((state, payload) => {\n    state.auth = payload\n  }),\n  setRecovery: action((state, payload) => {\n    state.recovery = payload\n  }),\n  setErrors: action((state, payload) => {\n    state.errors = payload\n  }),\n}\n\nexport default authModel","import { thunk, action } from 'easy-peasy'\nimport axios from 'axios'\n\nimport history from '../history'\n\nconst registerModel = {\n  registerProfessional: thunk(async (actions, payload) => {\n    actions.setUser(payload)\n\n    axios.post('/api/candidate/register', payload)\n      .then(() => {\n        localStorage.defaultLocation\n          ? history.push(`/login?${localStorage.defaultLocation}`)\n          : history.push('/login')\n      })\n      .catch(err => {\n        const errors = err.response.data\n        return actions.setErrors(errors)\n      })\n  }),\n  user: {},\n  errors: {},\n  setUser: action((state, payload) => {\n    state.user = payload\n  }),\n  setErrors: action((state, payload) => {\n    state.errors = payload\n  }),\n}\n\nexport default registerModel","import { createStore } from 'easy-peasy';\nimport GlobalModels from './models/index'\n\nconst { example, authModel, registerModel } = GlobalModels\n\nconst storeModel = {\n  products: example,\n  auth: authModel,\n  user: registerModel\n};\n\nconst store = createStore(storeModel);\n\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}